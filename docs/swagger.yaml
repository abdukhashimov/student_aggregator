basePath: /api/v1
definitions:
  domain.FieldSchema:
    properties:
      col:
        type: string
      is_map:
        type: boolean
      is_multiple:
        type: boolean
      map_start:
        type: boolean
      name:
        type: string
    type: object
  domain.NewSchemaInput:
    properties:
      fields:
        items:
          $ref: '#/definitions/domain.FieldSchema'
        type: array
      headers:
        type: boolean
      name:
        minLength: 3
        type: string
      schema_type:
        type: string
      version:
        type: string
    required:
    - fields
    - headers
    - name
    - schema_type
    - version
    type: object
  domain.ParseFileInput:
    properties:
      file_name:
        type: string
      schema_id:
        type: string
    required:
    - file_name
    - schema_id
    type: object
  domain.Project:
    properties:
      deadline:
        type: string
      finished_at:
        type: string
      name:
        type: string
      score:
        type: integer
    type: object
  domain.Schema:
    properties:
      fields:
        items:
          $ref: '#/definitions/domain.FieldSchema'
        type: array
      headers:
        type: boolean
      id:
        type: string
      name:
        type: string
      schema_type:
        type: string
      version:
        type: string
    type: object
  domain.SignInUserInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  domain.SignUpUserInput:
    properties:
      email:
        type: string
      password:
        maxLength: 200
        minLength: 8
        type: string
      username:
        maxLength: 200
        minLength: 6
        type: string
    required:
    - email
    - password
    - username
    type: object
  domain.StudentRecord:
    properties:
      application_date:
        type: string
      attended_events:
        type: integer
      company:
        type: string
      email:
        type: string
      first_name:
        type: string
      full_name:
        type: string
      join_date:
        type: string
      last_name:
        type: string
      location:
        type: string
      membership_type:
        type: string
      position:
        type: string
      preffered_language:
        items:
          type: string
        type: array
      projects:
        items:
          $ref: '#/definitions/domain.Project'
        type: array
      receives_community_updates:
        type: boolean
      registered:
        type: integer
      registered_not_visited:
        type: integer
      source:
        description: RSS, WAC
        type: string
      status:
        type: string
      status_items:
        items:
          type: string
        type: array
    type: object
  domain.TokenInput:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  domain.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  domain.UpdateSchemaInput:
    properties:
      fields:
        items:
          $ref: '#/definitions/domain.FieldSchema'
        type: array
      headers:
        type: boolean
      name:
        minLength: 3
        type: string
      schema_type:
        type: string
      version:
        type: string
    required:
    - fields
    - headers
    - name
    - schema_type
    - version
    type: object
  domain.UserProfile:
    properties:
      email:
        type: string
      id:
        type: string
      username:
        type: string
    type: object
  handlers.FileUploadInfo:
    properties:
      file_key:
        type: string
      file_name:
        type: string
      file_url:
        type: string
    type: object
  handlers.SchemaResponse:
    properties:
      schema:
        $ref: '#/definitions/domain.Schema'
    type: object
  handlers.SchemasResponse:
    properties:
      schemas:
        items:
          $ref: '#/definitions/domain.Schema'
        type: array
    type: object
  handlers.StudentResponse:
    properties:
      student:
        $ref: '#/definitions/domain.StudentRecord'
    type: object
  handlers.StudentsResponse:
    properties:
      students:
        items:
          $ref: '#/definitions/domain.StudentRecord'
        type: array
    type: object
  handlers.UserProfileResponse:
    properties:
      user:
        $ref: '#/definitions/domain.UserProfile'
    type: object
info:
  contact: {}
  description: This API contains the source for the Student Aggregator app
  title: Student Aggregator API
paths:
  /aggregator/parse:
    post:
      consumes:
      - application/json
      description: File Parsing process
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.ParseFileInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Parse File
      tags:
      - parser
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: user refresh tokens process
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.TokenInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      summary: User Refresh Tokens
      tags:
      - user-auth
  /health:
    get:
      consumes:
      - application/json
      description: Health Check
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Health Check
      tags:
      - health
  /schemas:
    get:
      consumes:
      - application/json
      description: retrieves all schemas
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SchemasResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: List Schemas
      tags:
      - schema
    post:
      consumes:
      - application/json
      description: schema creation process
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.NewSchemaInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Create Schema
      tags:
      - schema
  /schemas/{id}:
    delete:
      consumes:
      - application/json
      description: delete schema
      parameters:
      - description: schema id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Delete Schema
      tags:
      - schema
    get:
      consumes:
      - application/json
      description: get course by id
      parameters:
      - description: schema id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SchemaResponse'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Get Schema By ID
      tags:
      - schema
    patch:
      consumes:
      - application/json
      description: update schema by id
      parameters:
      - description: schema id
        in: path
        name: id
        required: true
        type: string
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/domain.UpdateSchemaInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.SchemaResponse'
        "404":
          description: Not Found
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Update Schema By ID
      tags:
      - schema
  /storage/upload:
    post:
      consumes:
      - multipart/form-data
      description: Creates new blob object in storage with file name
      parameters:
      - description: new object name in storage
        in: formData
        name: file_name
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.FileUploadInfo'
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Uploads files to blob storage
      tags:
      - file-upload
  /students:
    get:
      consumes:
      - application/json
      description: retrieves all students
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: skip
        in: query
        name: skip
        type: integer
      - description: email
        in: query
        name: email
        type: string
      - description: source
        in: query
        name: source
        type: string
      - description: sort
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.StudentsResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: List Students
      tags:
      - student
  /students/{id}:
    get:
      consumes:
      - application/json
      description: get student by id
      parameters:
      - description: student id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.StudentResponse'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: Get Student By ID
      tags:
      - student
  /user:
    get:
      consumes:
      - application/json
      description: retrieves user profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.UserProfileResponse'
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      security:
      - UsersAuth: []
      summary: User Profile
      tags:
      - user
  /users:
    post:
      consumes:
      - application/json
      description: user sign up process
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpUserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      summary: User SignUp
      tags:
      - user-auth
  /users/login:
    post:
      consumes:
      - application/json
      description: user sign in process
      parameters:
      - description: query params
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.SignInUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tokens'
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      summary: User SignIn
      tags:
      - user-auth
securityDefinitions:
  UsersAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
